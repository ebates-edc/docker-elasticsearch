cluster.name: ${CLUSTER_NAME}

node:
  name: ${HOSTNAME}
  master: ${NODE_MASTER}
  data: ${NODE_DATA}
  ingest: ${NODE_INGEST}


# for unicast discovery and standalone nodes (uncomment when you want to run it locally)
# discovery.zen:
#   minimum_master_nodes: ${MINIMUM_MASTER_NODES}
#   ping.unicast.hosts: ${HOSTS}
# network.host: ${NETWORK_HOST}

# comment out when running locally 
network:
  host:
  - _gce_
  - _local_
cloud:
  gce:
    project_id: ${PROJECT_ID}
    zone: ${ZONE}

# comment out when running locally 
discovery:
  zen:
    hosts_provider: gce
    minimum_master_nodes: ${MINIMUM_MASTER_NODES}
  gce:
    tags: ${TAGS}

http:
  enabled: ${HTTP_ENABLE}
  compression: true
  cors:
    enabled: ${HTTP_CORS_ENABLE}
    allow-origin: ${HTTP_CORS_ALLOW_ORIGIN}



xpack.graph.enabled: false
xpack.ml.enabled: false
xpack.security.enabled: false
xpack.monitoring.enabled: true
xpack.watcher.enabled: true
xpack.monitoring.exporters:
  local:
    type: http
    host: 127.0.0.1:9200
    auth.username: monitoring
    auth.password: ${MONITORING_PWD}


searchguard:
    ssl.transport:
        enabled: true
        enable_openssl_if_available: true
        keystore_type: JKS
        keystore_filepath: searchguard/ssl/${NODE_NAME}-keystore.jks
        keystore_password: ${KS_PWD}
        truststore_type: JKS
        truststore_filepath: searchguard/ssl/truststore.jks
        truststore_password: ${TS_PWD}
        enforce_hostname_verification: false
    ssl.http:
        enabled: ${HTTP_SSL}
        clientauth_mode: OPTIONAL
        enable_openssl_if_available: true
        keystore_type: JKS
        keystore_filepath: searchguard/ssl/${NODE_NAME}-keystore.jks
        keystore_password: ${KS_PWD}
        truststore_type: JKS
        truststore_filepath: searchguard/ssl/truststore.jks
        truststore_password: ${TS_PWD}
    authcz.admin_dn:
      - "CN=elastic ,OU=devops, C=COM"
    enable_snapshot_restore_privilege: true
    enterprise_modules_enabled: false
